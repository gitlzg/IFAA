(10/50)/(12/50)
(10/40)/(12/38)
61118/3600
pbinom(2,3,0.2)
pbinom(3,3,0.2)
pbinom(2,3,0.2)
pbinom(1,3,0.2)
pbinom(0,3,0.2)
1-0.896
0.896-0.512
1-0.512
0.384*0.488
0.384*0.488+0.104
(1-0.291)*0.506
pbinom(0,14,0.03)
?pbinom
pbinom(3,14,0.03)
1-pbinom(3,14,0.03)
pbinom(0,14,0.03)
0.2^2
e
library(cubature)
install.packages("cubature")
library(cubature)
adaptIntegrate
sqrt(10^(-3))
26668/4
6667/180
6667/180000
6667*12/180000
9*5
library(survival)
SRUV
SURV
qnorm(0.975)
qnorm(0.95)
adaptIntegrate
adaptIntegrat
adaptInt
library(cubature)
adaptInt
adaptIntegrate
nlminb
ns
library(splines)
ns
splineDesign
0.167*0.4
0.833*3/5
0.83/3
5/18
0.33-1.96*0.19
0.33+1.96*0.19
0.28-1.96*0.23
0.28+1.96*0.23
1.93/sqrt(1.25)
library(splines)
ns()
ns
splineDesign
library(cubature)
nlminb
28/72
41+16+11+11+2+2+2+1
232+22+20+14+3+2+2+0
72+19+9+64+5+5+9+5+5+3
39+48+12+18+22+19+20+51+47+9+13+11+44+29+12+167-12-12-48
9+36+34+23+13+20+15+17
2500*0.72
3000*0.72
exp(-600)
exp(-700)
exp(-900)
exp(-800)
exp(-750)
exp(0.13)
exp(-0.58)
1-exp(-0.58)
1/0
0/0
x=y=z=0
x
y
z
exp(-0.45)
1-exp(-0.45)
1-exp(-0.26)
1-exp(-1.96)
library(cubature)
adaptIntegrate
10^400/10^(-300)
10^700
log(10^700)
700*log(10)
11412/5
(11412/5)*41
150000-(11412/5)*41
2412/9000
mean(seq(10^7))
mean(seq(10^10))
?mean
mean
mean(rep(1,10^7))
mean(rep(1,10^8))
mean(rep(1,10^9))
mean(rep(1,10^10))
mean(seq(10^9))
mean(seq(10^10))
table(seq(10^10))
1000/0.35
install.packages("Rtools")
remove.packages("survival")
a=c(1,2,3)
b=c(3,4,5)
list(a,b)
M="C:/Dropbox (UFL)/papers/taxaSelect/Rpack/R/Mdata1.csv"
class(M)
a=read.csv(file=MdataDir,header=T,na.strings=c("","NA"))
M="C:/Dropbox (UFL)/papers/taxaSelect/Rpack/R/Mdata1.csv"
a=read.csv(file=m,header=T,na.strings=c("","NA"))
a=read.csv(file=M,header=T,na.strings=c("","NA"))
class(a)
is.data.frame(a)
class(M)
b="aaa"
class(b)
is.character(b)
substr(b)
b="aaa"
substr(b)
length(M)
nchar(M)
substr(nchar(M)-2,nchar(M),M)
nchar(M)
substr(M,nchar(M)-2,nchar(M))
substr(M,nchar(M)-2,nchar(M))="csv"
substr(M,nchar(M)-2,nchar(M))=="csv"
n <- 100
xx <- c(0:n, n:0)
yy <- c(c(0, cumsum(stats::rnorm(n))), rev(c(0, cumsum(stats::rnorm(n)))))
plot   (xx, yy, type = "n", xlab = "Time", ylab = "Distance")
polygon(xx, yy, col = "gray", border = "red")
title("Distance Between Brownian Motions")
remove.packages("phyloseq")
BiocManager::install("phyloseq")
install.packages(" https://win-builder.r-project.org/1vUk5Gxm9QqM/rstan_2.19.1.zip", repos = NULL)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
remove.packages("phyloseq")
3189824*5
3191503 *5
18000 *17/9
16/66
---
title: "heatmap try"
output: word_document
---
```{r}
k <- rep(c(1,0,1,1,0,1,0),6)
data <- matrix(k, nrow = 6, ncol = 7, byrow = FALSE)
rownames(data) <- c("a1","a2","a3","a4","a5","a6")
colnames(data) <- c("b1","b2","b3","b4","b5","b6","b7")
```
```{r}
heatmap(data)
```
```{r}
heatmap(data, scale = "column")
```
```{r}
heatmap(data, Colv = NA, Rowv = NA, scale="column")
```
```{r}
install.packages("RColorBrewer")
```
```{r}
library("RColorBrewer")
#display all colour schemes
display.brewer.all()
```
```{r}
install.packages("ggplot2")
```
```{r}
a<-c(rep("a1",7), rep("a2",7), rep("a3",7), rep("a4",7), rep("a5",7), rep("a6",7))
b<-rep(c("b1","b2","b3","b4","b5","b6","b7"),6)
k1 <- rep(c(1,2,3,5,0,4,0),6)
table <- cbind(a,b,k)
table <- as.data.frame(table)
```
```{r}
colorends <- c("white", "red", "white", "green", "white", "blue" ,"white" , "yellow" , "white" ,"orange" , "white" , "grey" , "white" , "purple")
ggplot(table, aes(a, b)) + geom_tile(aes(fill = k), color = "white")
```
---
title: "heatmap try"
output: word_document
---
```{r}
k <- rep(c(1,0,1,1,0,1,0),6)
data <- matrix(k, nrow = 6, ncol = 7, byrow = FALSE)
rownames(data) <- c("a1","a2","a3","a4","a5","a6")
colnames(data) <- c("b1","b2","b3","b4","b5","b6","b7")
```
```{r}
heatmap(data)
```
```{r}
heatmap(data, scale = "column")
```
```{r}
heatmap(data, Colv = NA, Rowv = NA, scale="column")
```
```{r}
install.packages("RColorBrewer")
```
```{r}
library("RColorBrewer")
#display all colour schemes
display.brewer.all()
```
```{r}
install.packages("ggplot2")
```
```{r}
a<-c(rep("a1",7), rep("a2",7), rep("a3",7), rep("a4",7), rep("a5",7), rep("a6",7))
b<-rep(c("b1","b2","b3","b4","b5","b6","b7"),6)
k1 <- rep(c(1,2,3,5,0,4,0),6)
table <- cbind(a,b,k)
table <- as.data.frame(table)
```
```{r}
colorends <- c("white", "red", "white", "green", "white", "blue" ,"white" , "yellow" , "white" ,"orange" , "white" , "grey" , "white" , "purple")
ggplot(table, aes(a, b)) + geom_tile(aes(fill = k), color = "white")
```
k <- rep(c(1,0,1,1,0,1,0),6)
data <- matrix(k, nrow = 6, ncol = 7, byrow = FALSE)
rownames(data) <- c("a1","a2","a3","a4","a5","a6")
colnames(data) <- c("b1","b2","b3","b4","b5","b6","b7")
heatmap(data)
heatmap(data, scale = "column")
heatmap(data, Colv = NA, Rowv = NA, scale="column")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library("RColorBrewer")
#display all colour schemes
display.brewer.all()
install.packages("ggplot2")
a<-c(rep("a1",7), rep("a2",7), rep("a3",7), rep("a4",7), rep("a5",7), rep("a6",7))
b<-rep(c("b1","b2","b3","b4","b5","b6","b7"),6)
k1 <- rep(c(1,2,3,5,0,4,0),6)
table <- cbind(a,b,k)
table <- as.data.frame(table)
colorends <- c("white", "red", "white", "green", "white", "blue" ,"white" , "yellow" , "white" ,"orange" , "white" , "grey" , "white" , "purple")
ggplot(table, aes(a, b)) + geom_tile(aes(fill = k), color = "white")
k <- rep(c(1,0,1,1,0,1,0),6)
data <- matrix(k, nrow = 6, ncol = 7, byrow = FALSE)
rownames(data) <- c("a1","a2","a3","a4","a5","a6")
colnames(data) <- c("b1","b2","b3","b4","b5","b6","b7")
heatmap(data)
heatmap(data, scale = "column")
heatmap(data, Colv = NA, Rowv = NA, scale="column")
install.packages("RColorBrewer")
library("RColorBrewer")
#display all colour schemes
display.brewer.all()
install.packages("ggplot2")
library(ggplot2)
a<-c(rep("a1",7), rep("a2",7), rep("a3",7), rep("a4",7), rep("a5",7), rep("a6",7))
b<-rep(c("b1","b2","b3","b4","b5","b6","b7"),6)
k1 <- rep(c(1,2,3,5,0,4,0),6)
table <- cbind(a,b,k)
table <- as.data.frame(table)
colorends <- c("white", "red", "white", "green", "white", "blue" ,"white" , "yellow" , "white" ,"orange" , "white" , "grey" , "white" , "purple")
ggplot(table, aes(a, b)) + geom_tile(aes(fill = k), color = "white")
heatmap
View(table)
View(data)
a<-c(rep("a1",7), rep("a2",7), rep("a3",7), rep("a4",7), rep("a5",7), rep("a6",7))
b<-rep(c("b1","b2","b3","b4","b5","b6","b7"),6)
k1 <- rep(c(1,2,3,5,0,4,0),6)
table <- cbind(a,b,k)
table <- as.data.frame(table)
View(table)
table
a
b
k1
table <- cbind(a,b,k1)
table
a<-c(rep("a1",7), rep("a2",7), rep("a3",7), rep("a4",7), rep("a5",7), rep("a6",7))
b<-rep(c("b1","b2","b3","b4","b5","b6","b7"),6)
k1 <- rep(c(1,2,3,5,0,4,0),6)
table <- cbind(a,b,k1)
table <- as.data.frame(table)
colorends <- c("white", "red", "white", "green", "white", "blue" ,"white" , "yellow" , "white" ,"orange" , "white" , "grey" , "white" , "purple")
ggplot(table, aes(a, b)) + geom_tile(aes(fill = k1), color = "white")
View(table)
View(data)
View(table)
table
table[1,3]=3
a<-c(rep("a1",7), rep("a2",7), rep("a3",7), rep("a4",7), rep("a5",7), rep("a6",7))
b<-rep(c("b1","b2","b3","b4","b5","b6","b7"),6)
k1 <- rep(c(1,2,3,5,0,4,0),6)
table <- cbind(a,b,k1)
table <- as.data.frame(table)
table[1,3]=3
colorends <- c("white", "red", "white", "green", "white", "blue" ,"white" , "yellow" , "white" ,"orange" , "white" , "grey" , "white" , "purple")
ggplot(table, aes(a, b)) + geom_tile(aes(fill = k1), color = "white")
a<-c(rep("a1",7), rep("a2",7), rep("a3",7), rep("a4",7), rep("a5",7), rep("a6",7))
b<-rep(c("b1","b2","b3","b4","b5","b6","b7"),6)
k1 <- rep(c(1,2,3,5,0,4,0),6)
k1 <- seq(42)
table <- cbind(a,b,k1)
table <- as.data.frame(table)
table[1,3]=3
colorends <- c("white", "red", "white", "green", "white", "blue" ,"white" , "yellow" , "white" ,"orange" , "white" , "grey" , "white" , "purple")
ggplot(table, aes(a, b)) + geom_tile(aes(fill = k1), color = "white")
power_con_bal=function(argu,n_e=argu[1],n_c=argu[2],rho=argu[3],psi1=argu[4],sigma=argu[5],alpha=argu[6],family=argu[7])
{quant=1-alpha
critical=qchisq(quant,df=1)
numerator=family*n_e*n_c*(psi1^2)
6
denom=(1-rho)*(n_e+n_c)*(sigma^2)
nu=numerator/denom
power=data.frame(t(pchisq(critical, 1, ncp = nu, lower.tail = FALSE)))
names(power)[1] <- c("Power")
print(power)
}
###an example
##input parameter
par=c(n_e=1,n_c=1,rho=0.3,psi1=1,sigma=4,alpha=0.05,family=30)
##calculate power
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.3,psi1=1,sigma=4,alpha=0.05,family=100)
##calculate power
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.8,psi1=1,sigma=4,alpha=0.05,family=100)
##calculate power
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.2,psi1=1,sigma=4,alpha=0.05,family=100)
##calculate power
power_con_bal(par)
###an example
##input parameter
par=c(n_e=1,n_c=1,rho=0.2,psi1=1,sigma=4,alpha=0.05,family=200)
##calculate power
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.8,psi1=1,sigma=4,alpha=0.05,family=100)
##calculate power
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.8,psi1=1,sigma=4,alpha=0.05,family=600)
##calculate power
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.8,psi1=1,sigma=4,alpha=0.05,family=60)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.8,psi1=1,sigma=4,alpha=0.05,family=50)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.5,psi1=1,sigma=4,alpha=0.05,family=50)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.5,psi1=1,sigma=4,alpha=0.05,family=100)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.5,psi1=1,sigma=4,alpha=0.05,family=120)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.5,psi1=1,sigma=4,alpha=0.05,family=125)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.2,psi1=2,sigma=4,alpha=0.05,family=200)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.2,psi1=2,sigma=4,alpha=0.05,family=100)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.2,psi1=2,sigma=4,alpha=0.05,family=60)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.2,psi1=2,sigma=4,alpha=0.05,family=50)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.5,psi1=2,sigma=4,alpha=0.05,family=30)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.8,psi1=2,sigma=4,alpha=0.05,family=10)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.8,psi1=2,sigma=4,alpha=0.05,family=20)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.8,psi1=2,sigma=4,alpha=0.05,family=15)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.2,psi1=1,sigma=4,alpha=0.05,family=200)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.2,psi1=1,sigma=4,alpha=0.05,family=225)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.2,psi1=1,sigma=4,alpha=0.05,family=250)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.2,psi1=1,sigma=4,alpha=0.05,family=260)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.2,psi1=1,sigma=4,alpha=0.05,family=270)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.5,psi1=1,sigma=4,alpha=0.05,family=150)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.5,psi1=1,sigma=4,alpha=0.05,family=170)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.8,psi1=1,sigma=4,alpha=0.05,family=70)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.8,psi1=1,sigma=4,alpha=0.05,family=65)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.8,psi1=1,sigma=4,alpha=0.05,family=70)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.2,psi1=2,sigma=4,alpha=0.05,family=70)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.2,psi1=2,sigma=4,alpha=0.05,family=65)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.2,psi1=2,sigma=4,alpha=0.05,family=65)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.5,psi1=2,sigma=4,alpha=0.05,family=40)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.5,psi1=2,sigma=4,alpha=0.05,family=45)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.8,psi1=2,sigma=4,alpha=0.05,family=20)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.8,psi1=2,sigma=4,alpha=0.05,family=18)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.8,psi1=2,sigma=4,alpha=0.05,family=15)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.8,psi1=2,sigma=4,alpha=0.05,family=12)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.8,psi1=2,sigma=4,alpha=0.05,family=15)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.8,psi1=2,sigma=4,alpha=0.05,family=16)
power_con_bal(par)
par=c(n_e=1,n_c=1,rho=0.8,psi1=2,sigma=4,alpha=0.05,family=17)
power_con_bal(par)
##input parameter
par=c(n_e=1,n_c=1,rho=0.8,psi1=2,sigma=4,alpha=0.05,family=13)
power_con_bal(par)
a=function(){return()}
a()
devtools::install_github("gitlzg/IFAA")
library(IFAA)
data(dataM)
data(dataC)
a=IFAA(Microbdata=dataM,CovData=dataC,linkIDname="id",
testCov=c("v1","v2"),ctrlCov=c("v3"),nRef=2,
refTaxa=c("rawCount67"),nPermu=2,paraJobs=NULL,
reguMethod="lasso",fwerRate=0.3,bootB=3)
results=IFAA(Microbdata=dataM,CovData=dataC,linkIDname="id",
testCov=c("v1","v2"),ctrlCov=c("v3"),nRef=2,
refTaxa=c("rawCount67"),nPermu=2,paraJobs=NULL,
reguMethod="mcp",fwerRate=0.3,bootB=3)
dataM
results=IFAA(Microbdata=dataM,CovData=dataC,linkIDname="id",
testCov=c("v1","v2"),ctrlCov=c("v3"),nRef=2,
refTaxa=c("rawCount67"),nPermu=2,paraJobs=NULL,
reguMethod="mcp",fwerRate=0.3,bootB=3)
results
remove.packages("IFAA")
remove.packages("IFAA")
detach("package:glmnet", unload = TRUE)
remove.packages("glmnet")
exp(-300)
exp(-600)
exp(-700)
exp(-1000)
exp(-800)
exp(-750)
exp(-720)
10%%5
remove.packages("IFAA")
library(devtools)
pkg <- 'C:/Dropbox (UFL)/papers/taxaSelect/Rpack/IFAA'
# create_package(pkg)
setwd(pkg)
# devtools::use_package("glmnet")
document() ## default argument is pkg = ".", current working directory
dataM=read.csv("C:/Dropbox (UFL)/papers/taxaSelect/Rpack/R/Mdata1.csv",header=T)
dataC=read.csv("C:/Dropbox (UFL)/papers/taxaSelect/Rpack/R/covData1.csv",header=T)
dataM=dataM[1:20,1:60]
dataC=dataC[1:20,]
use_data(dataM,overwrite = TRUE)
use_data(dataC,overwrite = TRUE)
## build the package
build() ## default argument is pkg = ".", current working directory
pkgFolder <- 'C:/Dropbox (UFL)/papers/taxaSelect/Rpack'
install.packages(file.path(pkgFolder,"IFAA_0.0.0.9000.tar.gz"),repos=NULL,type="source") ## directly with vignettes
# remove.packages("IFAA")
library(IFAA)
data(dataM)
data(dataC)
startT=proc.time()[3]
results=IFAA(Microbdata=dataM,CovData=dataC,linkIDname="id",
testCov=c("v1","v2"),ctrlCov=c("v3"),nRef=3,
#refTaxa=c("rawCount67"),
nPermu=3,paraJobs=NULL,
reguMethod="mcp",fwerRate=0.2,bootB=500)
endT=proc.time()[3]
cat((endT-startT)/60,"minutes","\n")
remove.packages("IFAA")
